1. Generic Type Notation:
    E - Element (used extensively by the Java Collections Framework)
    K - Key
    N - Number
    T - Type
    V - Value
    S,U,V etc. - 2nd, 3rd, 4th types

2. Generic Type is noted as, <T>, in API method

3. Foo<String> f is a type argument;
        V.S
   Foo<T> f is a type parameter

4.0 Comparator Lambda Expression

        PriorityQueue<String> pq = new PriorityQueue<String>((a,b)->{
            return map.get(a) - map.get(b);
        });


4. Comparator Syntax Implementation:

   class mycomparator implements Comparator<Player> {

       public int compare(Player p1, Player p2){
           if (p1.score == p2.score){
               return p1.name.compareTo(p2.name);
           }
           return p2.score - p1.score;
       }
   }